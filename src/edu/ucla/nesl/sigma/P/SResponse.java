// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigma/proto/P.proto
package edu.ucla.nesl.sigma.P;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class SResponse extends Message {

  public static final Type DEFAULT_TYPE = Type.OK;
  public static final String DEFAULT_ERROR = "";

  @ProtoField(tag = 1, type = ENUM, label = REQUIRED)
  public final Type type;

  @ProtoField(tag = 2, label = REQUIRED)
  public final URI self;

  @ProtoField(tag = 3, type = STRING)
  public final String error;

  @ProtoField(tag = 4)
  public final URI uri;

  @ProtoField(tag = 5)
  public final STransactionResponse transaction_response;

  private SResponse(Builder builder) {
    super(builder);
    this.type = builder.type;
    this.self = builder.self;
    this.error = builder.error;
    this.uri = builder.uri;
    this.transaction_response = builder.transaction_response;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) {
      return true;
    }
    if (!(other instanceof SResponse)) {
      return false;
    }
    SResponse o = (SResponse) other;
    return equals(type, o.type)
           && equals(self, o.self)
           && equals(error, o.error)
           && equals(uri, o.uri)
           && equals(transaction_response, o.transaction_response);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = type != null ? type.hashCode() : 0;
      result = result * 37 + (self != null ? self.hashCode() : 0);
      result = result * 37 + (error != null ? error.hashCode() : 0);
      result = result * 37 + (uri != null ? uri.hashCode() : 0);
      result = result * 37 + (transaction_response != null ? transaction_response.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<SResponse> {

    public Type type;
    public URI self;
    public String error;
    public URI uri;
    public STransactionResponse transaction_response;

    public Builder() {
    }

    public Builder(SResponse message) {
      super(message);
      if (message == null) {
        return;
      }
      this.type = message.type;
      this.self = message.self;
      this.error = message.error;
      this.uri = message.uri;
      this.transaction_response = message.transaction_response;
    }

    public Builder type(Type type) {
      this.type = type;
      return this;
    }

    public Builder self(URI self) {
      this.self = self;
      return this;
    }

    public Builder error(String error) {
      this.error = error;
      return this;
    }

    public Builder uri(URI uri) {
      this.uri = uri;
      return this;
    }

    public Builder transaction_response(STransactionResponse transaction_response) {
      this.transaction_response = transaction_response;
      return this;
    }

    @Override
    public SResponse build() {
      checkRequiredFields();
      return new SResponse(this);
    }
  }

  public enum Type {
    @ProtoEnum(0)
    OK,
    @ProtoEnum(1)
    ERROR,
    @ProtoEnum(2)
    URI,
    @ProtoEnum(3)
    BINDER_TRANSACTION_RESPONSE,
  }
}
